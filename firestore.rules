rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /pairRequests/{requestId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null;
    }
    
    match /pairs/{pairId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    match /invites/{inviteId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null;
    }
    
    match /lessons/{lessonId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null;
      allow delete: if request.auth != null;
    }
    
    match /messages/{messageId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
    }
    
    match /generationCache/{cacheId} {
    	allow read, write: if request.auth != null;
    }

    match /textbooks/{textbookId} {
      allow read, create: if request.auth != null;
    }

    match /lessonUserAnswers/{docId} {
      // Разрешаем чтение всем авторизованным
      allow read: if request.auth != null;
      
      // Разрешаем создание только если docId содержит uid пользователя
      allow create: if request.auth != null && 
                       docId.matches('.*_' + request.auth.uid + '$');
      
      // Разрешаем обновление только если docId содержит uid пользователя
      allow update: if request.auth != null && 
                       docId.matches('.*_' + request.auth.uid + '$');
      
      // Альтернативный вариант (более простой):
      // allow write: if request.auth != null;
    }
  }
}